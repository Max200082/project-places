{"remainingRequest":"/home/maks/Рабочий стол/project-places/node_modules/babel-loader/lib/index.js!/home/maks/Рабочий стол/project-places/src/store/actions/api-requests.js","dependencies":[{"path":"/home/maks/Рабочий стол/project-places/src/store/actions/api-requests.js","mtime":1633547327604},{"path":"/home/maks/Рабочий стол/project-places/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maks/Рабочий стол/project-places/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL21ha3MvXHUwNDIwXHUwNDMwXHUwNDMxXHUwNDNFXHUwNDQ3XHUwNDM4XHUwNDM5IFx1MDQ0MVx1MDQ0Mlx1MDQzRVx1MDQzQi9wcm9qZWN0LXBsYWNlcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBMT0dJTjogZnVuY3Rpb24gTE9HSU4oX3JlZiwgZm9ybSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2gocHJvY2Vzcy5lbnYuVlVFX0FQUF9BUElfVVJMICsgJ3VzZXJzL2xvZ2luJywgewogICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgICBtb2RlOiAibm8tY29ycyIsCiAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShmb3JtKQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBSRUdJU1RFUjogZnVuY3Rpb24gUkVHSVNURVIoX3JlZjIsIGZvcm0pIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaChwcm9jZXNzLmVudi5WVUVfQVBQX0FQSV9VUkwgKyAndXNlcnMvcmVnaXN0ZXInLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgIG1vZGU6ICJuby1jb3JzIiwKICAgICAgICAgICAgICAgIGJvZHk6IGZvcm0KICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIEdFVF9QT1NUUzogZnVuY3Rpb24gR0VUX1BPU1RTKF9yZWYzKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2gocHJvY2Vzcy5lbnYuVlVFX0FQUF9BUElfVVJMICsgJ3Bvc3RzJywgewogICAgICAgICAgICAgICAgbWV0aG9kOiAnR0VUJwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCdTQVZFX1BPU1RTJywgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIENIQU5HRV9MSUtFOiBmdW5jdGlvbiBDSEFOR0VfTElLRShfcmVmNCwgb2JqKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2gocHJvY2Vzcy5lbnYuVlVFX0FQUF9BUElfVVJMICsgJ2xpa2UnLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAgICAgcG9zdElkOiBvYmoucG9zdElkLAogICAgICAgICAgICAgICAgICBpc0xpa2U6IG9iai5pc0xpa2UKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAvLyDQt9Cw0LLQuNGB0LjRgiDQvtCxINCx0Y3QutCwCiAgICAgICAgICAgICAgY29tbWl0KCdDSEFOR0VfTElLRScsIG9iaik7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["/home/maks/Рабочий стол/project-places/src/store/actions/api-requests.js"],"names":["LOGIN","form","commit","fetch","process","env","VUE_APP_API_URL","method","mode","body","JSON","stringify","response","REGISTER","GET_POSTS","data","CHANGE_LIKE","obj","postId","isLike"],"mappings":";;;AAAA,eAAe;AACLA,EAAAA,KADK,uBACaC,IADb,EACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBC,cAAAA,MAAgB,QAAhBA,MAAgB;AAAA;AAAA,qBACHC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA8B,aAA/B,EAA8C;AACtEC,gBAAAA,MAAM,EAAE,MAD8D;AAEtEC,gBAAAA,IAAI,EAAE,SAFgE;AAGtEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AAHgE,eAA9C,CADF;;AAAA;AACpBW,cAAAA,QADoB;AAAA,+CAQnBA,QARmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS7B,GAVU;AAWLC,EAAAA,QAXK,2BAWcZ,IAXd,EAWoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAfC,cAAAA,MAAe,SAAfA,MAAe;AAAA;AAAA,qBACNC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA8B,gBAA/B,EAAiD;AACvEC,gBAAAA,MAAM,EAAE,MAD+D;AAEvEC,gBAAAA,IAAI,EAAE,SAFiE;AAGvEC,gBAAAA,IAAI,EAAER;AAHiE,eAAjD,CADC;;AAAA;AACvBW,cAAAA,QADuB;AAAA,gDAQpBA,QARoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS9B,GApBU;AAqBLE,EAAAA,SArBK,4BAqBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAATZ,cAAAA,MAAS,SAATA,MAAS;AAAA;AAAA,qBACDC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA8B,OAA/B,EAAwC;AAC9DC,gBAAAA,MAAM,EAAE;AADsD,eAAxC,CADJ;;AAAA;AAClBK,cAAAA,QADkB;AAItBV,cAAAA,MAAM,CAAC,YAAD,EAAeU,QAAQ,CAACG,IAAxB,CAAN;;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKzB,GA1BU;AA2BLC,EAAAA,WA3BK,8BA2BiBC,GA3BjB,EA2BsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAdf,cAAAA,MAAc,SAAdA,MAAc;AAAA;AAAA,qBACRC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA8B,MAA/B,EAAuC;AAC7DC,gBAAAA,MAAM,EAAE,MADqD;AAE7DE,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACO,kBAAAA,MAAM,EAAED,GAAG,CAACC,MAAb;AAAqBC,kBAAAA,MAAM,EAAEF,GAAG,CAACE;AAAjC,iBAAf;AAFuD,eAAvC,CADG;;AAAA;AACzBP,cAAAA,QADyB;AAK7B;AACAV,cAAAA,MAAM,CAAC,aAAD,EAAgBe,GAAhB,CAAN;;AAN6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhC;AAlCU,CAAf","sourcesContent":["export default {\n    async LOGIN({ commit }, form) {\n        const response = await fetch(process.env.VUE_APP_API_URL + 'users/login', {\n            method: 'POST',\n            mode: \"no-cors\",\n            body: JSON.stringify(form)\n        })\n        // вызов мутации и созранение пользователя и token в стор (зависит от бэка)\n        // commit('SAVE_USER', response.data)\n        return response\n    },\n    async REGISTER({commit}, form) {\n        let response = await fetch(process.env.VUE_APP_API_URL + 'users/register', {\n            method: 'POST',\n            mode: \"no-cors\",\n            body: form\n        })\n        // вызов мутации и созранение пользователя и token в стор (зависит от бэка)\n        // commit('SAVE_USER', response.data)\n        return response\n    },\n    async GET_POSTS({commit}) {\n        let response = await fetch(process.env.VUE_APP_API_URL + 'posts', {\n            method: 'GET',\n        })\n        commit('SAVE_POSTS', response.data)\n    },\n    async CHANGE_LIKE({commit}, obj) {\n        let response = await fetch(process.env.VUE_APP_API_URL + 'like', {\n            method: 'POST',\n            body: JSON.stringify({postId: obj.postId, isLike: obj.isLike})\n        })\n        // зависит об бэка\n        commit('CHANGE_LIKE', obj)\n    }\n}"]}]}