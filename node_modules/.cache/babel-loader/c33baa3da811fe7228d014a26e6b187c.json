{"remainingRequest":"/home/maks/Рабочий стол/web-front/web-front/node_modules/babel-loader/lib/index.js!/home/maks/Рабочий стол/web-front/web-front/src/store/actions/api-requests.js","dependencies":[{"path":"/home/maks/Рабочий стол/web-front/web-front/src/store/actions/api-requests.js","mtime":1633547327604},{"path":"/home/maks/Рабочий стол/web-front/web-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maks/Рабочий стол/web-front/web-front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL21ha3MvXHUwNDIwXHUwNDMwXHUwNDMxXHUwNDNFXHUwNDQ3XHUwNDM4XHUwNDM5IFx1MDQ0MVx1MDQ0Mlx1MDQzRVx1MDQzQi93ZWItZnJvbnQvd2ViLWZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIExPR0lOOiBmdW5jdGlvbiBMT0dJTihfcmVmLCBmb3JtKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaChwcm9jZXNzLmVudi5WVUVfQVBQX0FQSV9VUkwgKyAndXNlcnMvbG9naW4nLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgIG1vZGU6ICJuby1jb3JzIiwKICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGZvcm0pCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIFJFR0lTVEVSOiBmdW5jdGlvbiBSRUdJU1RFUihfcmVmMiwgZm9ybSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKHByb2Nlc3MuZW52LlZVRV9BUFBfQVBJX1VSTCArICd1c2Vycy9yZWdpc3RlcicsIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgbW9kZTogIm5vLWNvcnMiLAogICAgICAgICAgICAgICAgYm9keTogZm9ybQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgR0VUX1BPU1RTOiBmdW5jdGlvbiBHRVRfUE9TVFMoX3JlZjMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaChwcm9jZXNzLmVudi5WVUVfQVBQX0FQSV9VUkwgKyAncG9zdHMnLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICBjb21taXQoJ1NBVkVfUE9TVFMnLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0sCiAgQ0hBTkdFX0xJS0U6IGZ1bmN0aW9uIENIQU5HRV9MSUtFKF9yZWY0LCBvYmopIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaChwcm9jZXNzLmVudi5WVUVfQVBQX0FQSV9VUkwgKyAnbGlrZScsIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgICBwb3N0SWQ6IG9iai5wb3N0SWQsCiAgICAgICAgICAgICAgICAgIGlzTGlrZTogb2JqLmlzTGlrZQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgIC8vINC30LDQstC40YHQuNGCINC+0LEg0LHRjdC60LAKICAgICAgICAgICAgICBjb21taXQoJ0NIQU5HRV9MSUtFJywgb2JqKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["/home/maks/Рабочий стол/web-front/web-front/src/store/actions/api-requests.js"],"names":["LOGIN","form","commit","fetch","process","env","VUE_APP_API_URL","method","mode","body","JSON","stringify","response","REGISTER","GET_POSTS","data","CHANGE_LIKE","obj","postId","isLike"],"mappings":";;;AAAA,eAAe;AACLA,EAAAA,KADK,uBACaC,IADb,EACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBC,cAAAA,MAAgB,QAAhBA,MAAgB;AAAA;AAAA,qBACHC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA8B,aAA/B,EAA8C;AACtEC,gBAAAA,MAAM,EAAE,MAD8D;AAEtEC,gBAAAA,IAAI,EAAE,SAFgE;AAGtEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AAHgE,eAA9C,CADF;;AAAA;AACpBW,cAAAA,QADoB;AAAA,+CAQnBA,QARmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS7B,GAVU;AAWLC,EAAAA,QAXK,2BAWcZ,IAXd,EAWoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAfC,cAAAA,MAAe,SAAfA,MAAe;AAAA;AAAA,qBACNC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA8B,gBAA/B,EAAiD;AACvEC,gBAAAA,MAAM,EAAE,MAD+D;AAEvEC,gBAAAA,IAAI,EAAE,SAFiE;AAGvEC,gBAAAA,IAAI,EAAER;AAHiE,eAAjD,CADC;;AAAA;AACvBW,cAAAA,QADuB;AAAA,gDAQpBA,QARoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS9B,GApBU;AAqBLE,EAAAA,SArBK,4BAqBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAATZ,cAAAA,MAAS,SAATA,MAAS;AAAA;AAAA,qBACDC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA8B,OAA/B,EAAwC;AAC9DC,gBAAAA,MAAM,EAAE;AADsD,eAAxC,CADJ;;AAAA;AAClBK,cAAAA,QADkB;AAItBV,cAAAA,MAAM,CAAC,YAAD,EAAeU,QAAQ,CAACG,IAAxB,CAAN;;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKzB,GA1BU;AA2BLC,EAAAA,WA3BK,8BA2BiBC,GA3BjB,EA2BsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAdf,cAAAA,MAAc,SAAdA,MAAc;AAAA;AAAA,qBACRC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA8B,MAA/B,EAAuC;AAC7DC,gBAAAA,MAAM,EAAE,MADqD;AAE7DE,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACO,kBAAAA,MAAM,EAAED,GAAG,CAACC,MAAb;AAAqBC,kBAAAA,MAAM,EAAEF,GAAG,CAACE;AAAjC,iBAAf;AAFuD,eAAvC,CADG;;AAAA;AACzBP,cAAAA,QADyB;AAK7B;AACAV,cAAAA,MAAM,CAAC,aAAD,EAAgBe,GAAhB,CAAN;;AAN6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhC;AAlCU,CAAf","sourcesContent":["export default {\n    async LOGIN({ commit }, form) {\n        const response = await fetch(process.env.VUE_APP_API_URL + 'users/login', {\n            method: 'POST',\n            mode: \"no-cors\",\n            body: JSON.stringify(form)\n        })\n        // вызов мутации и созранение пользователя и token в стор (зависит от бэка)\n        // commit('SAVE_USER', response.data)\n        return response\n    },\n    async REGISTER({commit}, form) {\n        let response = await fetch(process.env.VUE_APP_API_URL + 'users/register', {\n            method: 'POST',\n            mode: \"no-cors\",\n            body: form\n        })\n        // вызов мутации и созранение пользователя и token в стор (зависит от бэка)\n        // commit('SAVE_USER', response.data)\n        return response\n    },\n    async GET_POSTS({commit}) {\n        let response = await fetch(process.env.VUE_APP_API_URL + 'posts', {\n            method: 'GET',\n        })\n        commit('SAVE_POSTS', response.data)\n    },\n    async CHANGE_LIKE({commit}, obj) {\n        let response = await fetch(process.env.VUE_APP_API_URL + 'like', {\n            method: 'POST',\n            body: JSON.stringify({postId: obj.postId, isLike: obj.isLike})\n        })\n        // зависит об бэка\n        commit('CHANGE_LIKE', obj)\n    }\n}"]}]}